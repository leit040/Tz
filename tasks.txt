﻿1. PHP

Code a function that returns the number all unique case-insensitive characters that occur >= $n times in a given string.

function getNumOfUniqueCharacters($str, $n) {
	// ...
}

Examples:
getNumOfUniqueCharacters('A1B2C3', 2); // 0
getNumOfUniqueCharacters('A1a1C1', 2); // 2, because A and 1 both occur 2 or more times.
getNumOfUniqueCharacters('Alabama', 3); // 1

// --------------------------------------------------------------

2. JS

You're working on the web application that's about to be used in a country with a weird formatting of phone numbers.
They add dashes only before and after each group of odd digits. Let's write a function for this. See examples for more details.

function addDashes(num) {
	// ...
}

console.log(addDashes(645545965)); // '64-55-4-59-6-5'
console.log(addDashes(411222333)); // '4-11-222-333'
console.log(addDashes(81229576231)); // '8-1-22-957-62-31'

// --------------------------------------------------------------

3. JS

We'd like you to write a simple autocomplete function. It will take in an input string and a dictionary array and return the values from the dictionary that start with the input string.
No need to code an actual autocomplete control with HTML etc, just a function.

function autocomplete(search, dictionary, results_limit)

The function must meet the following requirements:
- If the current input returns nothing, try to cut off last characters one by one until it does or no characters left. E.g.
autocomplete('panic', ['Panda', 'pants', 'span', 'panel', 'picnic', 'pacman'], 5) should still return ['Panda','pants','panel'] because 'panic' doesn't match anything, neither 'pani', but 'pan' has 3 matches.
- Any non-letter should be skipped like if wasn't there. For example, an input of "$#@" should be treated as "" and "a1b@c2d" must be equal to "abcd".
- Limit results to a first `results_limit` matches, where `results_limit` is the third parameter of a function.
- If no matches, return an empty array.
- The search must be be case-insensitive, but the results must be in their original case.

// --------------------------------------------------------------

4. PHP

"Carry" is a term of an elementary arithmetic. It's a digit that you transfer to column with higher significant digits when adding numbers.
This task is about getting the sum of all carried digits.
You will receive an array of two numbers, like in the example. The function should return the sum of all carried digits.

function carry($arr) {
	// ...
}

carry([123, 456]); // 0
carry([555, 555]); // 3
carry([123, 594]); // 1

Support of arbitrary number of operands will be a plus:
carry([123, 123, 804]); // 2

// --------------------------------------------------------------

5. JS

We have a rectangular field with some buildings on it. Each building consists of one or more squares (each square marked as X).
We need a function that calculates the total perimeter of all buildings.
The field is given as a 2D array.
For example:

calcPerimeter([' X']) // The function must return 4.

calcPerimeter([
	'X',
	'X',
	' ',
]) // Must return 6

calcPerimeter([
	'X   X ',
	'X   X ',
	'    X ',
	'XX  X ',
	' X    ',
]) // Must return 24

// --------------------------------------------------------------

6. MySQL

We have the following tables:

Table: branch
Fields:
id int (pk)
name varchar

Table: person
Fields:
id int (pk)
office_id int not null
chief_id int
name varchar
wage float

Please write SQL queries for:

a) Select all people, who get paid more than their direct chiefs
b) Select a list of all offices along with a person with the highest wage in each. if more than one person has the highest wage, display them all. The office should be selected even if it has no people.
c) Select all chiefs, who have exactly one direct subordinate.
d) Select all offices sorted by total wage of people in it, descending.


